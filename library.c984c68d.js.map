{"mappings":"kpBAsBA,IAAAA,EACAC,E,iJArBA,IAAIC,EAAU,GAoBdF,EAlBA,SAAkBG,GAGhB,IAFA,IAAIC,EAAOC,OAAOD,KAAKD,GAEdG,EAAI,EAAGA,EAAIF,EAAKG,OAAQD,IAC/BJ,EAAQE,EAAKE,IAAMH,EAAMC,EAAKE,G,EAelCL,EAXA,SAAiBO,GACf,IAAIC,EAAWP,EAAQM,GAEvB,GAAgB,MAAZC,EACF,MAAM,IAAIC,MAAM,oCAAsCF,GAGxD,OAAOC,C,KCnBTE,EAAA,SAAAC,SAA8CC,KAAKC,MAAM,oJCAlD,MAAMC,EAAO,CAClBC,gBAAiBC,SAASC,cAAc,YACxCC,eAAgBF,SAASC,cAAc,gCACvCE,aAAcH,SAASC,cAAc,8BACrCG,QAASJ,SAASC,cAAc,eAChCI,cAAeL,SAASC,cAAc,mB,mBCDjC,SAASK,EAAwBC,GACtC,MAAMC,EAAaD,EAASE,KAAIC,IACvB,IACFA,EACFC,YAAaD,EAAOC,YACjB,kCAAkCD,EAAOC,cACzC,GAAGC,EAAAC,KACPC,aAAcJ,EAAOI,aAAaC,MAAM,EAAG,GAC3CC,aAAcN,EAAOM,aAAaC,QAAQ,GAC1CC,YAAaR,EAAOS,OAAOV,KAAI,EAACW,KAAEA,KAAWA,IAAMC,KAAK,MACxDC,SAAUZ,EAAOY,SACf,GAAGZ,EAAOY,WACX,yCAGLxB,EAAKC,gBAAgBwB,mBAAmB,aAAa,EAAAC,EAAAC,SAASjB,G,CCnBhEK,EAAiB,IAAAa,IAAoBhC,EAAA,SAAAiC,QAA6C,SAAQC,OAAAC,KAAAC,KAAEC,W,iBCM5F,MAAMC,EAAW,IAAI,E,WAAAC,U,aCDrB,MAAMC,EAAW,IAAI,E,WAAAD,UCArBjC,SAASmC,iBAAiB,oBAAoB,KAC1CrC,EAAKM,QAAQgC,UAAUC,IAAI,SAAS,IAExCvC,EAAKI,eAAeiC,iBAAiB,SFE9BG,iBACLxC,EAAKO,cAAc+B,UAAUG,OAAO,gBAAiB,eACrDzC,EAAKC,gBAAgByC,UAAY,GAEjC1C,EAAKM,QAAQgC,UAAUG,OAAO,UAC9B,MAAME,GAAqB,EAAAC,EAAAC,cAC3BC,QAAQC,IAAIJ,GACsB,IAA9BA,EAAmBnD,QACrBQ,EAAKO,cAAc+B,UAAUC,IAAI,iBAEnC,MAAMS,EAAmBL,EAAmBhC,KAAIsC,GAC9Cf,EAASgB,aAAaD,KAKxBzC,QAFsC2C,QAAQC,IAAIJ,IAGlDhD,EAAKM,QAAQgC,UAAUC,IAAI,S,IElB7BvC,EAAKK,aAAagC,iBAAiB,SDD5BG,iBACLxC,EAAKC,gBAAgByC,UAAY,GACjC1C,EAAKO,cAAc+B,UAAUG,OAAO,gBAAiB,iBACrDzC,EAAKM,QAAQgC,UAAUG,OAAO,UAC9B,MAAMY,GAAmB,EAAAT,EAAAU,YACO,IAA5BD,EAAiB7D,QACnBQ,EAAKO,cAAc+B,UAAUC,IAAI,eAEnC,MAAMS,EAAmBK,EAAiB1C,KAAIsC,GAC5Cb,EAASc,aAAaD,KAGxBzC,QADsC2C,QAAQC,IAAIJ,IAElDhD,EAAKM,QAAQgC,UAAUC,IAAI,S","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-7411f4514c56708a.js","src/js/library/refs-library.js","src/js/library/append-card-markup-library.js","node_modules/@parcel/runtime-js/lib/runtime-0d4445badabdb0bd.js","src/js/library/watched-btn.js","src/js/library/queue-btn.js","src/js/library/init-page-library.js"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"dyE3l\\\":\\\"library.c984c68d.js\\\",\\\"9bKPF\\\":\\\"no-poster.a2151f5f.png\\\",\\\"ggbzi\\\":\\\"index.f897df34.js\\\"}\"));","export const refs = {\n  gallery_library: document.querySelector('.library'),\n  libraryWatched: document.querySelector('.header-library__btn.watched'),\n  libraryQueue: document.querySelector('.header-library__btn.queue'),\n  spinner: document.querySelector('.lds-roller'),\n  library_empty: document.querySelector('.library_empty')\n};\n","import { refs } from './refs-library';\nimport cardHTML from '../../tamlates/gallery-card.hbs';\nimport poster from '../../images/no-poster.png'\n\nexport function appendCardMarkupLibrary(arrCards) {\n  const newArrCard = arrCards.map(result => {\n    return {\n      ...result,\n       poster_path: result.poster_path\n        ? `https://image.tmdb.org/t/p/w500${result.poster_path}`\n        : `${poster}`,\n      release_date: result.release_date.slice(0, 4),\n      vote_average: result.vote_average.toFixed(1),\n      genre_names: result.genres.map(({ name }) => name).join(', '),\n      overview: result.overview\n      ? `${result.overview}`\n      :'These is no description for now...',\n    };\n  });\n  refs.gallery_library.insertAdjacentHTML('beforeend', cardHTML(newArrCard));\n}\n","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"9bKPF\")).toString();","import { refs } from './refs-library';\n\nimport { appendCardMarkupLibrary } from './append-card-markup-library';\nimport { getWatched } from '../init-form';\nimport { MovieAPI } from '../movie-API';\n\nconst movieApi = new MovieAPI();\n\n// const STORAGE_WATCHED = 'watched-state';\n\nexport async function onWatchedClick() {\n  refs.library_empty.classList.remove(\"library_empty\", \"queue_empty\");\n  refs.gallery_library.innerHTML = '';\n\n  refs.spinner.classList.remove('hidden');\n  const arrSelectedWatched = getWatched();\n  console.log(arrSelectedWatched)\n  if (arrSelectedWatched.length === 0){\n    refs.library_empty.classList.add(\"watched_empty\")\n  }\n  const arrFetchPromises = arrSelectedWatched.map(el =>\n    movieApi.getMovieById(el)\n  );\n\n  const responseOfFetchPromises = await Promise.all(arrFetchPromises);\n\n  appendCardMarkupLibrary(responseOfFetchPromises);\n  refs.spinner.classList.add('hidden');\n}\n","import { refs } from './refs-library';\nimport { getQueue } from '../init-form';\n\nimport { MovieAPI } from '../movie-API';\nimport { appendCardMarkupLibrary } from './append-card-markup-library';\nconst movieApi = new MovieAPI();\n// const STORAGE_QUEUE = 'queue-state';\n\nexport async function onQueueClick() {\n  refs.gallery_library.innerHTML = '';\n  refs.library_empty.classList.remove(\"library_empty\", \"watched_empty\");\n  refs.spinner.classList.remove('hidden');\n  const arrSelectedQueue = getQueue();\n  if (arrSelectedQueue.length === 0){\n    refs.library_empty.classList.add(\"queue_empty\")\n  }\n  const arrFetchPromises = arrSelectedQueue.map(el =>\n    movieApi.getMovieById(el)\n  );\n  const responseOfFetchPromises = await Promise.all(arrFetchPromises);\n  appendCardMarkupLibrary(responseOfFetchPromises);\n  refs.spinner.classList.add('hidden');\n}\n","import { refs } from './refs-library';\nimport { onWatchedClick } from './watched-btn';\nimport { onQueueClick } from './queue-btn';\n\n\ndocument.addEventListener('DOMContentLoaded', () => { \n    refs.spinner.classList.add('hidden');\n});\nrefs.libraryWatched.addEventListener('click', onWatchedClick);\nrefs.libraryQueue.addEventListener('click', onQueueClick);\n"],"names":["$ef7689007096c8a0$export$6503ec6e8aabbaf","$ef7689007096c8a0$export$f7ad0328861e2f03","$ef7689007096c8a0$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","parcelRequire","register","JSON","parse","$0b2919a7c2ebb160$export$21666b427502ea6d","gallery_library","document","querySelector","libraryWatched","libraryQueue","spinner","library_empty","$ff754b8bdf3922aa$export$ad518168752985a8","arrCards","newArrCard","map","result","poster_path","$parcel$interopDefault","$3c5bb012fa61625f$exports","release_date","slice","vote_average","toFixed","genre_names","genres","name","join","overview","insertAdjacentHTML","$cSII7","default","URL","resolve","import","meta","url","toString","$c089ddc4d94b1a4a$var$movieApi","MovieAPI","$b45ac7005141df97$var$movieApi","addEventListener","classList","add","async","remove","innerHTML","arrSelectedWatched","$eTE7F","getWatched","console","log","arrFetchPromises","el","getMovieById","Promise","all","arrSelectedQueue","getQueue"],"version":3,"file":"library.c984c68d.js.map"}